{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs3/helpers/interopRequireDefault\");\nvar _Object$defineProperty = require(\"@babel/runtime-corejs3/core-js-stable/object/define-property\");\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _set = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/set\"));\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/slicedToArray\"));\nvar _entries = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/entries\"));\nvar _find = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/find\"));\nvar _stringify = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/json/stringify\"));\nvar _concat = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/concat\"));\nvar _keys = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/keys\"));\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/toConsumableArray\"));\nvar _forEach = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/for-each\"));\nvar _map = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/map\"));\nvar _rolesMap = _interopRequireDefault(require(\"./rolesMap\"));\nvar _context;\nvar elementRoleMap = new _map.default([]);\n(0, _forEach.default)(_context = (0, _toConsumableArray2.default)((0, _keys.default)(_rolesMap.default).call(_rolesMap.default))).call(_context, function (key) {\n  var role = _rolesMap.default.get(key);\n  if (role) {\n    var _context2, _context3;\n    (0, _forEach.default)(_context2 = (0, _concat.default)(_context3 = []).call(_context3, (0, _toConsumableArray2.default)(role.baseConcepts), (0, _toConsumableArray2.default)(role.relatedConcepts))).call(_context2, function (relation) {\n      if (relation.module === 'HTML') {\n        var concept = relation.concept;\n        if (concept) {\n          var _context4;\n          var conceptStr = (0, _stringify.default)(concept);\n          var roles = ((0, _find.default)(_context4 = (0, _toConsumableArray2.default)((0, _entries.default)(elementRoleMap).call(elementRoleMap))).call(_context4, function (_ref) {\n            var _ref2 = (0, _slicedToArray2.default)(_ref, 2),\n              key = _ref2[0],\n              value = _ref2[1];\n            return (0, _stringify.default)(key) === conceptStr;\n          }) || [])[1];\n          if (!roles) {\n            roles = new _set.default([]);\n          }\n          roles.add(key);\n          elementRoleMap.set(concept, roles);\n        }\n      }\n    });\n  }\n});\nvar _default = elementRoleMap;\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}